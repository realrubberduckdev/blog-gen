name: Blog Generator

on:
  workflow_dispatch:
    inputs:
      blog_request_json:
        description: "Blog request JSON content"
        required: true
        type: string
        default: '{"Topic": "Getting Started with AI Models", "Description": "A comprehensive guide to setting up and using AI models for content generation", "TargetAudience": "Developers", "WordCount": 100, "Tone": "Professional"}'

jobs:
  generate-blog-post:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Create and Validate JSON File
        shell: pwsh
        run: |
          Write-Host "üìù Creating blog-request.json from input..."
          '${{ inputs.blog_request_json }}' | Out-File -FilePath blog-request.json -Encoding UTF8

          Write-Host "‚úÖ Validating JSON format..."
          try {
            $json = Get-Content blog-request.json -Raw | ConvertFrom-Json
            Write-Host "‚úÖ JSON syntax is valid"
          }
          catch {
            Write-Host "‚ùå ERROR: Invalid JSON format: $($_.Exception.Message)"
            Write-Host "Input received:"
            Write-Host '${{ inputs.blog_request_json }}'
            exit 1
          }

          Write-Host "‚úÖ Validating required fields..."
          $requiredFields = @("Topic", "Description", "TargetAudience", "WordCount", "Tone")

          foreach ($field in $requiredFields) {
            if (-not $json.PSObject.Properties.Name -contains $field) {
              Write-Host "‚ùå ERROR: Missing required field '$field'"
              exit 1
            }
          }

          Write-Host "‚úÖ JSON validation successful!"
          Write-Host "üìÑ Blog request content:"
          Get-Content blog-request.json

      - name: Run Blog Generator
        shell: pwsh
        run: |
          Write-Host "‚úçÔ∏è Running blog generator with Google AI model..."

          # Configure secrets for model access
          dotnet user-secrets init
          dotnet user-secrets set "GoogleAI:ApiKey" "${{ secrets.GOOGLE_AI_API_KEY }}"

          # Run with API key from secrets
          dotnet run --project blog-gen.csproj --configuration Release blog-request.json

          if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå Blog generation failed"
            exit 1
          }

          Write-Host "‚úÖ Blog generation completed"

      - name: Upload Generated Content
        uses: actions/upload-artifact@v4
        with:
          name: generated-blog-content
          path: |
            *.md
            blog-request.json
          retention-days: 7
